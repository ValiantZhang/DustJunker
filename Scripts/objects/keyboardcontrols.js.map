{"version":3,"sources":["objects/keyboardcontrols.ts"],"names":[],"mappings":"AAAA,IAAO,OAAO,CAuFb;AAvFD,WAAO,OAAO,EAAC,CAAC;IACZ,yCAAyC;IACzC;QASI,6CAA6C;QAC7C;YACI,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAChE,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACvE,CAAC;QAED,gBAAgB;QAEhB;;;;;;;;;;WAUG;QAEI,oCAAS,GAAhB,UAAiB,KAAK,EAAC,aAAa;YAChC,MAAM,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;gBAClB,KAAK,EAAE,CAAC,CAAC,aAAa;gBACtB,KAAK,EAAE;oBACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,KAAK,CAAC;gBAEV,KAAK,EAAE,CAAC,CAAC,eAAe;gBACxB,KAAK,EAAE;oBACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,KAAK,CAAC;gBAEV,KAAK,EAAE,CAAC,CAAC,eAAe;gBACxB,KAAK,EAAE;oBACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,KAAK,CAAC;gBAEV,KAAK,EAAE,CAAC,CAAC,gBAAgB;gBACzB,KAAK,EAAE;oBACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAK,CAAC;gBAEV,KAAK,EAAE;oBACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,KAAK,CAAC;YACd,CAAC;QACL,CAAC;QAEM,kCAAO,GAAd,UAAe,KAAK,EAAC,aAAa;YAC9B,MAAM,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;gBAClB,KAAK,EAAE,CAAC,CAAC,aAAa;gBACtB,KAAK,EAAE;oBACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,KAAK,CAAC;gBAEV,KAAK,EAAE,CAAC,CAAC,eAAe;gBACxB,KAAK,EAAE;oBACH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,KAAK,CAAC;gBAEV,KAAK,EAAE,CAAC,CAAC,eAAe;gBACxB,KAAK,EAAE;oBACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,KAAK,CAAC;gBAEV,KAAK,EAAE,CAAC,CAAC,gBAAgB;gBACzB,KAAK,EAAE;oBACH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAK,CAAC;gBAEV,KAAK,EAAE;oBACH,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;oBAClB,KAAK,CAAC;YACd,CAAC;QACL,CAAC;QACL,uBAAC;IAAD,CApFA,AAoFC,IAAA;IApFY,wBAAgB,mBAoF5B,CAAA;AACL,CAAC,EAvFM,OAAO,KAAP,OAAO,QAuFb","file":"objects/keyboardcontrols.js","sourcesContent":["module objects {\n    // KeyboardControls Class +++++++++++++++\n    export class KeyboardControls {\n        // PUBLIC INSTANCE VARIABLES ++++++++++++\n        public moveForward: boolean;\n        public moveBackward: boolean;\n        public moveLeft: boolean;\n        public moveRight: boolean;\n        public jump: boolean;\n        public enabled: boolean;\n    \n        // CONSTRUCTOR ++++++++++++++++++++++++++    \n        constructor() {\n            document.addEventListener('keydown', this.onKeyDown.bind(this));\n            document.addEventListener('keyup', this.onKeyUp.bind(this), false);\n        }\n        \n        //PUBLIC METHODS\n        \n        /*public enabled(): void {\n            document.addEventListener('keydown', this.onKeyDown.bind(this), false);\n            document.addEventListener('keyup', this.onKeyUp.bind(this), false);\n            console.log(\"keyboard controls enabled\");\n        }\n        \n        public disabled(): void {\n            document.removeEventListener('keydown', this.onKeyDown.bind(this));\n            document.removeEventListener('keyup', this.onKeyUp.bind(this));\n            console.log(\"keyboard controls disabled\");\n        }*/\n        \n        public onKeyDown(event.KeyboardEvent): void{\n            switch(event.keyCode){\n                case 38: /*up arrorw*/\n                case 87: /*W Key*/\n                    this.moveForward = true;\n                    break;\n                    \n                case 37: /*left arrorw*/\n                case 65: /*A Key*/\n                    this.moveLeft = true;\n                    break;\n                    \n                case 40: /*down arrorw*/\n                case 83: /*S Key*/\n                    this.moveBackward = true;\n                    break;\n                    \n                case 39: /*right arrorw*/\n                case 68: /*D Key*/\n                    this.moveRight = true;\n                    break;\n                    \n                case 32: /*space*/\n                    this.jump = true;\n                    break;\n            }\n        }\n        \n        public onKeyUp(event.KeyboardEvent): void{\n            switch(event.keyCode){\n                case 38: /*up arrorw*/\n                case 87: /*W Key*/\n                    this.moveForward = false;\n                    break;\n                    \n                case 37: /*left arrorw*/\n                case 65: /*A Key*/\n                    this.moveLeft = false;\n                    break;\n                    \n                case 40: /*down arrorw*/\n                case 83: /*S Key*/\n                    this.moveBackward = false;\n                    break;\n                    \n                case 39: /*right arrorw*/\n                case 68: /*D Key*/\n                    this.moveRight = false;\n                    break;\n                    \n                case 32: /*space*/\n                    this.jump = false;\n                    break;\n            }   \n        }\n    }\n}"],"sourceRoot":"/source/"}